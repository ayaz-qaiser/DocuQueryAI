version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: infra/docker/api.Dockerfile
    ports:
      - "8000:8000"
    environment:
      # TODO: Add environment variables from .env file
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/docuquery_ai
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    volumes:
      - ../src:/app/src:ro
      - ../uploads:/app/uploads
    networks:
      - docuquery-network

  worker:
    build:
      context: ..
      dockerfile: infra/docker/worker.Dockerfile
    environment:
      # TODO: Add environment variables from .env file
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/docuquery_ai
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    volumes:
      - ../src:/app/src:ro
      - ../uploads:/app/uploads
    networks:
      - docuquery-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=docuquery_ai
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d docuquery_ai"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - docuquery-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - docuquery-network

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - docuquery-network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@docuquery.ai
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - docuquery-network

  # Optional: Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - docuquery-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  docuquery-network:
    driver: bridge
